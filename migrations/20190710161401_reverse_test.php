<?php declare(strict_types=1);

namespace Migres\Migrations;

use PeeHaa\Migres\MigrationSpecification;

class ReverseTest extends MigrationSpecification
{
    public function change(): void
    {
        $this->table('migration_test')
            ->addColumn('id', 'bigserial')
            ->removeColumn('id')
            ->addColumn('big_integer', 'bigint')
            ->removeColumn('big_integer')
            ->addColumn('big_integer_not_null', 'bigint', ['null' => false])
            ->removeColumn('big_integer_not_null')
            ->addColumn('big_integer_with_default', 'bigint', ['default' => 12])
            ->removeColumn('big_integer_with_default')
            ->addColumn('big_integer_with_default_not_null', 'bigint', ['default' => 12, 'null' => false])
            ->removeColumn('big_integer_with_default_not_null')
            ->addColumn('binary', 'bit(12)')
            ->removeColumn('binary')
            ->addColumn('binary_not_null', 'bit(12)', ['null' => false])
            ->removeColumn('binary_not_null')
            ->addColumn('binary_with_default_binary_string', 'bit(12)', ['default' => "B'111111111111'"])
            ->removeColumn('binary_with_default_binary_string')
            ->addColumn('binary_with_default_casting', 'bit(12)', ['default' => "'11111111111'::bit(12)"])
            ->removeColumn('binary_with_default_casting')
            ->addColumn('binary_with_default_string', 'bit(12)', ['default' => '111111111111'])
            ->removeColumn('binary_with_default_string')
            ->addColumn('binary_not_null', 'bit(12)', ['null' => false])
            ->removeColumn('binary_not_null')
            ->addColumn('binary_var', 'bit varying(12)')
            ->removeColumn('binary_var')
            ->addColumn('binary_var_not_null', 'bit varying(12)', ['null' => false])
            ->removeColumn('binary_var_not_null')
            ->addColumn('binary_var_with_default_binary_string', 'bit varying(12)', ['default' => "B'111111111111'"])
            ->removeColumn('binary_var_with_default_binary_string')
            ->addColumn('binary_var_with_default_binary_string_internal_default', 'bit varying(12)', ['default' => "B'111111111111'::bit"])
            ->removeColumn('binary_var_with_default_binary_string_internal_default')
            ->addColumn('boolean_test', 'boolean')
            ->removeColumn('boolean_test')
            ->addColumn('boolean_test_not_null', 'boolean', ['null' => false])
            ->removeColumn('boolean_test_not_null')
            ->addColumn('boolean_test_with_default_boolean', 'boolean', ['default' => true])
            ->removeColumn('boolean_test_with_default_boolean')
            ->addColumn('boolean_test_with_string_boolean', 'boolean', ['default' => 'no'])
            ->removeColumn('boolean_test_with_string_boolean')
            ->addColumn('box_test', 'box')
            ->removeColumn('box_test')
            ->addColumn('box_test_not_null', 'box', ['null' => false])
            ->removeColumn('box_test_not_null')
            ->addColumn('box_test_with_default', 'box', ['default' => '(1, 1), (10, 10)'])
            ->removeColumn('box_test_with_default')
            ->addColumn('byte', 'bytea')
            ->removeColumn('byte')
            ->addColumn('byte_not_null', 'bytea', ['null' => false])
            ->removeColumn('byte_not_null')
            ->addColumn('byte_with_default', 'bytea', ['default' => 'data'])
            ->removeColumn('byte_with_default')
            ->addColumn('character', 'character')
            ->removeColumn('character')
            ->addColumn('character_not_null', 'character', ['null' => false])
            ->removeColumn('character_not_null')
            ->addColumn('character_with_default', 'character', ['default' => 'd'])
            ->removeColumn('character_with_default')
            ->addColumn('character_limited_with_default_not_null', 'character(6)', ['null' => false, 'default' => 'abcdef'])
            ->removeColumn('character_limited_with_default_not_null')
            ->addColumn('circle', 'circle')
            ->removeColumn('circle')
            ->addColumn('circle_not_null', 'circle', ['null' => false])
            ->removeColumn('circle_not_null')
            ->addColumn('circle_with_default_casting', 'circle', ['default' => "'((10, 10), 100)'::circle"])
            ->removeColumn('circle_with_default_casting')
            ->addColumn('circle_with_default_quoted_string', 'circle', ['default' => '((10, 10), 100)'])
            ->removeColumn('circle_with_default_quoted_string')
            ->addColumn('circle_with_default_string', 'circle', ['default' => "((10, 10), 100)"])
            ->removeColumn('circle_with_default_string')
            ->addColumn('cidr', 'cidr')
            ->removeColumn('cidr')
            ->addColumn('cidr_not_null', 'cidr', ['null' => false])
            ->removeColumn('cidr_not_null')
            ->addColumn('cidr_with_default', 'cidr', ['default' => '192.168.1.0/24'])
            ->removeColumn('cidr_with_default')
            ->addColumn('date', 'date')
            ->removeColumn('date')
            ->addColumn('date_not_null', 'date', ['null' => false])
            ->removeColumn('date_not_null')
            ->addColumn('date_with_default', 'date', ['default' => '2019-01-12'])
            ->removeColumn('date_with_default')
            ->addColumn('double', 'double precision')
            ->removeColumn('double')
            ->addColumn('double_not_null', 'double precision', ['null' => false])
            ->removeColumn('double_not_null')
            ->addColumn('double_with_default', 'double precision', ['default' => 119.16])
            ->removeColumn('double_with_default')
            ->addColumn('float', 'float')
            ->removeColumn('float')
            ->addColumn('inet', 'inet')
            ->removeColumn('inet')
            ->addColumn('inet_not_null', 'inet', ['null' => false])
            ->removeColumn('inet_not_null')
            ->addColumn('inet_with_default', 'inet', ['default' => '192.168.1.60'])
            ->removeColumn('inet_with_default')
            ->addColumn('int', 'integer')
            ->removeColumn('int')
            ->addColumn('int_not_null', 'integer', ['null' => false])
            ->removeColumn('int_not_null')
            ->addColumn('int_with_default', 'integer', ['default' => 100])
            ->removeColumn('int_with_default')
            ->addColumn('json', 'json')
            ->removeColumn('json')
            ->addColumn('json_not_null', 'json', ['null' => false])
            ->removeColumn('json_not_null')
            ->addColumn('json_with_default', 'json', ['default' => '{"foo": "bar"}'])
            ->removeColumn('json_with_default')
            ->addColumn('jsonb', 'jsonb')
            ->removeColumn('jsonb')
            ->addColumn('jsonb_not_null', 'jsonb', ['null' => false])
            ->removeColumn('jsonb_not_null')
            ->addColumn('jsonb_with_default', 'jsonb', ['default' => '{"foo": "bar"}'])
            ->removeColumn('jsonb_with_default')
            ->addColumn('line', 'line')
            ->removeColumn('line')
            ->addColumn('line_not_null', 'line', ['null' => false])
            ->removeColumn('line_not_null')
            ->addColumn('line_with_default', 'line', ['default' => '{1, 2, 3}'])
            ->removeColumn('line_with_default')
            ->addColumn('line_with_default_casted', 'line', ['default' => "'{1, 2, 3}'::line"])
            ->removeColumn('line_with_default_casted')
            ->addColumn('line_with_default_string', 'line', ['default' => '{1, 2, 3}'])
            ->removeColumn('line_with_default_string')
            ->addColumn('lseg', 'lseg')
            ->removeColumn('lseg')
            ->addColumn('lseg_not_null', 'lseg', ['null' => false])
            ->removeColumn('lseg_not_null')
            ->addColumn('lseg_with_default', 'lseg', ['default' => '(1, 2), (3, 4)'])
            ->removeColumn('lseg_with_default')
            ->addColumn('macaddr', 'macaddr')
            ->removeColumn('macaddr')
            ->addColumn('macaddr_not_null', 'macaddr', ['null' => false])
            ->removeColumn('macaddr_not_null')
            ->addColumn('macaddr_with_default', 'macaddr', ['default' => '08:00:2b:01:02:03'])
            ->removeColumn('macaddr_with_default')
            ->addColumn('money', 'money')
            ->removeColumn('money')
            ->addColumn('money_not_null', 'money', ['null' => false])
            ->removeColumn('money_not_null')
            ->addColumn('money_with_default', 'money', ['default' => 12.13])
            ->removeColumn('money_with_default')
            ->addColumn('money_with_default_string', 'money', ['default' => '12.13'])
            ->removeColumn('money_with_default_string')
            ->addColumn('numeric', 'numeric')
            ->removeColumn('numeric')
            ->addColumn('numeric_with_precision', 'numeric(10)')
            ->removeColumn('numeric_with_precision')
            ->addColumn('numeric_with_precision_and_scale', 'numeric(10, 4)')
            ->removeColumn('numeric_with_precision_and_scale')
            ->addColumn('path', 'path')
            ->removeColumn('path')
            ->addColumn('path_with_default', 'path', ['default' => '1, 2, 3, 4, 5, 6'])
            ->removeColumn('path_with_default')
            ->addColumn('point', 'point')
            ->removeColumn('point')
            ->addColumn('point_with_default', 'point', ['default' => '1, 2'])
            ->removeColumn('point_with_default')
            ->addColumn('polygon', 'polygon')
            ->removeColumn('polygon')
            ->addColumn('polygon_with_default', 'polygon', ['default' => '1, 2, 3, 4, 5, 6'])
            ->removeColumn('polygon_with_default')
            ->addColumn('real', 'real')
            ->removeColumn('real')
            ->addColumn('serial', 'serial')
            ->removeColumn('serial')
            ->addColumn('smallint', 'smallint')
            ->removeColumn('smallint')
            ->addColumn('smallserial', 'smallserial')
            ->removeColumn('smallserial')
            ->addColumn('text', 'text')
            ->removeColumn('text')
            ->addColumn('timestamp', 'timestamp')
            ->removeColumn('timestamp')
            ->addColumn('timestamp_without_timezone', 'timestamp without time zone')
            ->removeColumn('timestamp_without_timezone')
            ->addColumn('timestamp_without_timezone_with_precision', 'timestamp(2) without time zone')
            ->removeColumn('timestamp_without_timezone_with_precision')
            ->addColumn('timestamp_with_timezone', 'timestamp with time zone')
            ->removeColumn('timestamp_with_timezone')
            ->addColumn('timestamp_with_timezone_with_precision', 'timestamp(2) with time zone')
            ->removeColumn('timestamp_with_timezone_with_precision')
            ->addColumn('time', 'time')
            ->removeColumn('time')
            ->addColumn('time_without_timezone', 'time without time zone')
            ->removeColumn('time_without_timezone')
            ->addColumn('time_without_timezone_with_precision', 'time(2) without time zone')
            ->removeColumn('time_without_timezone_with_precision')
            ->addColumn('time_with_timezone', 'time with time zone')
            ->removeColumn('time_with_timezone')
            ->addColumn('time_with_timezone_with_precision', 'time(2) with time zone')
            ->removeColumn('time_with_timezone_with_precision')
            ->addColumn('uuid', 'uuid')
            ->removeColumn('uuid')
            //->addColumn('varchar_col', 'character varying(255)')
            //->addColumn('varchar_col_not_null', 'character varying(255)', ['null' => false])
            //->addColumn('varchar_col_with_default', 'character varying(255)', ['default' => 'This is the default'])
            //->addColumn('varchar_col_with_custom_length', 'character varying(24)')
            //->addColumn('json_col', 'jsonb')
            //->addColumn('column_to_be_removed', 'integer')
            //->removeColumn('column_to_be_removed')
            //->addColumn('column_with_unique_constraint', 'integer')
            //->addIndex('unq_migration_test_column_with_unique_constraint', ['column_with_unique_constraint'], ['unique' => true])
            //->addColumn('column_to_be_renamed', 'varchar(128)')
            //->renameColumn('column_to_be_renamed', 'column_renamed')
            //->addColumn('first_column_index', 'integer')
            //->addColumn('second_column_index', 'integer')
            //->addIndex('idx_custom_index', ['first_column_index desc', 'second_column_index desc'], ['method' => 'btree'])
            //->addColumn('column_to_be_changed', 'integer')
            //->changeColumn('column_to_be_changed', 'bigint', ['null' => false, 'default' => 1200])
            //->addColumn('column_with_check', 'integer')
            //->addCheck('chk_greater_than_10', 'column_with_check > 10')
            //->addPrimaryKey('key_migration_test', 'id')
            //->addColumn('column_to_be_removed_in_previous_migration', 'integer')
            ->create()
        ;
    }
}
